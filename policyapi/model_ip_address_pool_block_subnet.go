/*
 * NSX Policy API
 *
 * VMware NSX Policy REST API
 *
 * API version: 4.2.0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsxt

// This type of subnet allows user to dynamically carve a subnet out of a preconfigured IpAddressBlock. The user must specify the size of the subnet and the IpAddressBlock from which the subnet is to be derived. If the required amount of IP address space is available in the specified IpAddressBlock, the system automatically configures subnet range. IpAddressBlock available size is calculated based on the size of IpAddressPoolBlockSubnet intent object and not on realized. The user should delete failed IpAddressPoolBlockSubnet to utilize IpAddressBlock size correctly.
type IpAddressPoolBlockSubnet struct {
	Self *SelfResourceLink `json:"_self,omitempty"`
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string `json:"_schema,omitempty"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
	Revision int32 `json:"_revision,omitempty"`
	// Indicates system owned resource
	SystemOwned bool `json:"_system_owned,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []Tag `json:"tags,omitempty"`
	// ID of the user who created this resource
	CreateUser string `json:"_create_user,omitempty"`
	// Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
	Protection string `json:"_protection,omitempty"`
	// Timestamp of resource creation
	CreateTime int64 `json:"_create_time,omitempty"`
	// Timestamp of last modification
	LastModifiedTime int64 `json:"_last_modified_time,omitempty"`
	// ID of the user who last modified this resource
	LastModifiedUser string `json:"_last_modified_user,omitempty"`
	// Unique identifier of this resource
	Id string `json:"id,omitempty"`
	// Specifies whether the IpAddressPoolSubnet is to be carved out of a IpAddressBlock or will be specified by the user
	ResourceType string `json:"resource_type"`
	// Path of its parent
	ParentPath string `json:"parent_path,omitempty"`
	// This is a UUID generated by the system for realizing the entity object. In most cases this should be same as 'unique_id' of the entity. However, in some cases this can be different because of entities have migrated their unique identifier to NSX Policy intent objects later in the timeline and did not use unique_id for realization. Realization id is helpful for users to debug data path to correlate the configuration with corresponding intent. 
	RealizationId string `json:"realization_id,omitempty"`
	// Absolute path of this object
	Path string `json:"path,omitempty"`
	// This is a UUID generated by the system for knowing which site owns an object. This is used in NSX+. 
	OriginSiteId string `json:"origin_site_id,omitempty"`
	// Path relative from its parent
	RelativePath string `json:"relative_path,omitempty"`
	// This is a UUID generated by the system for knowing who owns this object. This is used in NSX+. 
	OwnerId string `json:"owner_id,omitempty"`
	// This is a UUID generated by the GM/LM to uniquely identify entities in a federated environment. For entities that are stretched across multiple sites, the same ID will be used on all the stretched sites. 
	UniqueId string `json:"unique_id,omitempty"`
	// This is the path of the object on the local managers when queried on the NSX+ service, and path of the object on NSX+ service when queried from the local managers. 
	RemotePath string `json:"remote_path,omitempty"`
	// Subtree for this type within policy tree containing nested elements. Note that  this type is applicable to be used in Hierarchical API only. 
	Children []ChildPolicyConfigResource `json:"children,omitempty"`
	// Global intent objects cannot be modified by the user. However, certain global intent objects can be overridden locally by use of this property. In such cases, the overridden local values take precedence over the globally defined values for the properties. 
	Overridden bool `json:"overridden,omitempty"`
	// Intent objects are not directly deleted from the system when a delete is invoked on them. They are marked for deletion and only when all the realized entities for that intent object gets deleted, the intent object is deleted. Objects that are marked for deletion are not returned in GET call. One can use the search API to get these objects. 
	MarkedForDelete bool `json:"marked_for_delete,omitempty"`
	// Realization of intent will be called synchronously 
	SyncRealization bool `json:"sync_realization,omitempty"`
	// The path of the IpAddressBlock from which the subnet is to be created.
	IpBlockPath string `json:"ip_block_path"`
	// For internal system use Only. Represents start ip address of the subnet from IP block. Subnet ip adddress will start from this ip address.
	StartIp string `json:"start_ip,omitempty"`
	// Represents Gateway address of the subnet in a NSX+ instance.
	GatewayAddress string `json:"gateway_address,omitempty"`
	// Represents Broadcast address of the subnet in a NSX+ instance.
	BroadcastAddress string `json:"broadcast_address,omitempty"`
	// If this property is set to true, the first IP in the range will be reserved for gateway. 
	AutoAssignGateway bool `json:"auto_assign_gateway,omitempty"`
	// Allocation range is used to limit subnet range to be used for allocations of IPs from subnet. This must be less than or equal to subnet size. Instead of taking whole subnet range for allocations, user can limit the range used for allocation of IPs. This is very useful in IPv6 case where big subnets needs to be carved out from IpAddressBlock but whole subnet range will not be needed for IP allocations. Eg:   subnet range is (2002:2345::0001-2002:2345::7fff:ffff):     subnet_start_ip: 2002:2345::0001-2002:2345     subnet_end_ip: 2002:2345::7fff:ffff   User would like to use only 128 IPs for allocations.     allocation_range: 128     allocation range used (2002:2345::0001-2002:2345::7fff:007f):       allocation_range_start_ip: 2002:2345::0001-2002:2345       allocation_range_end_ip: 2002:2345::7fff:007f 
	AllocationRange int64 `json:"allocation_range,omitempty"`
	// Represents network address and the prefix length in a NSX+ instance which will be associated with a layer-2 broadcast domain. 
	Cidr string `json:"cidr,omitempty"`
	// Represents Network address of the subnet in a NSX+ instance.
	NetworkAddress string `json:"network_address,omitempty"`
	// The size parameter is required for subnet creation. It must be specified during creation but cannot be changed later. 
	SubnetSize string `json:"subnet_size,omitempty"`
	// The size parameter is required for subnet creation. It must be specified during creation but cannot be changed later. Please use subnet_size instead as integer type cannot hold big values needs for IPv6. 
	Size int64 `json:"size,omitempty"`
}
